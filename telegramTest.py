#pyTelegramBotAPI
#aiogpram

token ='8135470075:AAFw0XUWEWjdBY4bqjf79FKOvAnc3KfWTyU'

import telebot
from telebot import types


bot=telebot.TeleBot(token)

kb=types.ReplyKeyboardMarkup(row_width=2) #–∫–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –ø–æ 2 –≤ —Ä—è–¥
btn1=types.KeyboardButton('üß† –ü—Ä–∏–≤–µ—Ç')
btn2=types.KeyboardButton('üòÄ –ö–∞–∫ –¥–µ–ª–∞')
kb.add(btn1, btn2)

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏ –≥–æ—Ç–æ–≤ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∑–∞ –≤–∞–º–∏', reply_markup=kb)

@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, '–Ø –ø—Ä–æ—Å—Ç–æ —ç—Ö–æ')

@bot.message_handler(commands=['url'])
def url(message):
    markup = types.InlineKeyboardMarkup()
    btn_site = types.InlineKeyboardButton(text='–ù–∞—à —Å–∞–π—Ç', url='https://ipap.ru')
    markup.add(btn_site)
    bot.send_message(message.chat.id, "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def carrot(message):
    if message.text =='–ü—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, 'üß† –û, –ü—Ä–∏–≤–µ—Ç')
    elif message.text =='–ö–∞–∫ –¥–µ–ª–∞?':
        #bot.send_message(message.chat.id, 'üëç')
        answer = types.InlineKeyboardMarkup(row_width=2)
        btn_good = types.InlineKeyboardButton('–•–æ—Ä–æ—à–æ', callback_data='good')
        btn_bad = types.InlineKeyboardButton('–ü–ª–æ—Ö–æ', callback_data='bad')
        answer.add(btn_good, btn_bad)
        bot.send_message(message.chat.id, '–£ –º–µ–Ω—è –Ω–æ—Ä–º, –∞ —É —Ç–µ–±—è?', reply_markup=answer)
    else:
        bot.send_message(message.chat.id, message.text)  # –∫—É–¥–∞ –ø–∏—à–µ–º, —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message=='good':
             bot.send_message(call.message.chat.id, '–†–∞–¥–∞ –∑–∞ —Ç–µ–±—è')
        if call.message=='bad':
             bot.send_message(call.message.chat.id, '–í—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è')
    except Exception as e:
        print(repr(e))

if __name__ == '__main__':
    bot.infinity_polling()

